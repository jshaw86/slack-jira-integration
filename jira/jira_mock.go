// Code generated by MockGen. DO NOT EDIT.
// Source: ../../jira/jira.go

// Package jira is a generated GoMock package.
package jira

import (
	reflect "reflect"

	jira "github.com/andygrunwald/go-jira"
	gomock "github.com/golang/mock/gomock"
)

// MockJiraClientWrapper is a mock of JiraClientWrapper interface.
type MockJiraClientWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockJiraClientWrapperMockRecorder
}

// MockJiraClientWrapperMockRecorder is the mock recorder for MockJiraClientWrapper.
type MockJiraClientWrapperMockRecorder struct {
	mock *MockJiraClientWrapper
}

// NewMockJiraClientWrapper creates a new mock instance.
func NewMockJiraClientWrapper(ctrl *gomock.Controller) *MockJiraClientWrapper {
	mock := &MockJiraClientWrapper{ctrl: ctrl}
	mock.recorder = &MockJiraClientWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJiraClientWrapper) EXPECT() *MockJiraClientWrapperMockRecorder {
	return m.recorder
}

// createIssue mocks base method.
func (m *MockJiraClientWrapper) createIssue(arg0 *jira.Issue) (*jira.Issue, *jira.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "createIssue", arg0)
	ret0, _ := ret[0].(*jira.Issue)
	ret1, _ := ret[1].(*jira.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// createIssue indicates an expected call of createIssue.
func (mr *MockJiraClientWrapperMockRecorder) createIssue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createIssue", reflect.TypeOf((*MockJiraClientWrapper)(nil).createIssue), arg0)
}

// getSelf mocks base method.
func (m *MockJiraClientWrapper) getSelf() (*jira.User, *jira.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getSelf")
	ret0, _ := ret[0].(*jira.User)
	ret1, _ := ret[1].(*jira.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// getSelf indicates an expected call of getSelf.
func (mr *MockJiraClientWrapperMockRecorder) getSelf() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getSelf", reflect.TypeOf((*MockJiraClientWrapper)(nil).getSelf))
}
